# week07/.github/workflows/backend_ci.yml
name: Backend CI - Test, Build and Push Images to ACR

on:
  workflow_dispatch:
  push:
    branches: [ main ]
    # ⬇️ If this repo's folders live under "week07/", keep these paths.
    # If your repo has backend/.github at the root, drop the "week07/" prefix.
    paths:
      - "week07/backend/**"
      - "week07/.github/workflows/backend_ci.yml"

concurrency:
  group: backend-ci-${{ github.ref }}
  cancel-in-progress: true

permissions:
  contents: read

env:
  # e.g., nihal722acr.azurecr.io (set as a GitHub secret)
  ACR_LOGIN_SERVER: ${{ secrets.ACR_LOGIN_SERVER }}
  IMAGE_TAG: ${{ github.sha }}-${{ github.run_id }}

jobs:
  test_and_lint_backends:
    runs-on: ubuntu-latest

    services:
      product_db:
        image: postgres:15
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
          POSTGRES_DB: products
        options: >-
          --health-cmd "pg_isready -U postgres"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports: [ "5432:5432" ]

      order_db:
        image: postgres:15
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
          POSTGRES_DB: orders
        options: >-
          --health-cmd "pg_isready -U postgres"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports: [ "5433:5432" ]

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.10"

      - name: Cache pip
        uses: actions/cache@v4
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ hashFiles('week07/backend/**/requirements*.txt') }}
          restore-keys: ${{ runner.os }}-pip-

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          for req in week07/backend/*/requirements.txt; do
            echo "Installing $req"
            pip install -r "$req"
          done
          pip install pytest

      - name: Test product_service
        working-directory: week07/backend/product_service
        env:
          POSTGRES_HOST: localhost
          POSTGRES_PORT: 5432
          POSTGRES_DB: products
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
        run: pytest -q tests

      - name: Test order_service
        working-directory: week07/backend/order_service
        env:
          POSTGRES_HOST: localhost
          POSTGRES_PORT: 5433
          POSTGRES_DB: orders
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
        run: pytest -q tests

  build_and_push_images:
    runs-on: ubuntu-latest
    needs: test_and_lint_backends

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      # ─────────────────────────────────────────
      # Azure login using AZURE_CREDENTIALS (JSON)
      # Secrets required:
      #   - AZURE_CREDENTIALS  (JSON with clientId, clientSecret, tenantId, subscriptionId)
      #   - ACR_LOGIN_SERVER   (e.g. nihal722acr.azurecr.io)
      # ─────────────────────────────────────────
      - name: Azure login (JSON creds)
        uses: azure/login@v2
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}

      - name: az acr login
        run: az acr login --name "${{ env.ACR_LOGIN_SERVER%%.* }}"

      # Build & push Product
      - name: Build & Push product_service
        uses: docker/build-push-action@v6
        with:
          context: week07/backend/product_service
          push: true
          tags: |
            ${{ env.ACR_LOGIN_SERVER }}/product_service:latest
            ${{ env.ACR_LOGIN_SERVER }}/product_service:${{ env.IMAGE_TAG }}

      # Build & push Order
      - name: Build & Push order_service
        uses: docker/build-push-action@v6
        with:
          context: week07/backend/order_service
          push: true
          tags: |
            ${{ env.ACR_LOGIN_SERVER }}/order_service:latest
            ${{ env.ACR_LOGIN_SERVER }}/order_service:${{ env.IMAGE_TAG }}

      - name: Azure logout
        if: ${{ always() }}
        run: az logout

